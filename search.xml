<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C/C++动态链接库的简单使用</title>
      <link href="/posts/e9447a0f/"/>
      <url>/posts/e9447a0f/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言下最简单的动态链接库demo"><a href="#C语言下最简单的动态链接库demo" class="headerlink" title="C语言下最简单的动态链接库demo"></a>C语言下最简单的动态链接库demo</h1><p>实现一个demo，在main.c中调用动态链接库中的add函数。</p><h2 id="准备源码"><a href="#准备源码" class="headerlink" title="准备源码"></a>准备源码</h2><p>首先实现add函数，在add.c中实现以下内容。</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>在add.h中实现以下内容。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> ADD_H_</span><span class="token macro property">#<span class="token directive keyword">define</span> ADD_H_</span><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment" spellcheck="true">/* MAX_H_ */</span></code></pre><p>在main.c中包含头文件并调用函数。</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"add.h"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Sum of %d and %d is %d\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h2><ol><li><p>编译动态链接库。</p><pre class=" language-bash"><code class="language-bash">gcc --shared -fPIC -o libadd.so add.c</code></pre></li></ol><ol start="2"><li><p>编译主函数</p><pre class=" language-bash"><code class="language-bash">gcc -o main main.c -L. -ladd</code></pre></li></ol><ol start="3"><li><p>运行。</p><pre class=" language-bash"><code class="language-bash">$ ./mainSum of 10 and 20 is 30</code></pre></li></ol><h1 id="C语言实现的动态链接库在C-中调用"><a href="#C语言实现的动态链接库在C-中调用" class="headerlink" title="C语言实现的动态链接库在C++中调用"></a>C语言实现的动态链接库在C++中调用</h1><p>如果直接使用</p><pre class=" language-c++"><code class="language-c++">#include<iostream>#include "add.h"int main(){    int a = 10, b = 20;    printf("Sum of %d and %d is %d\n", a, b, add(a, b));    std::cout << "Sum of " << a << " and " << b << " is " << add(a, b) << "\n";    return 0;}</code></pre><p>编译</p><pre class=" language-bash"><code class="language-bash">$ g++ -o main2 main2.cpp -L. -ladd/usr/bin/ld: /tmp/cc0fInkR.o: <span class="token keyword">in</span> <span class="token keyword">function</span> `main<span class="token string">':main2.cpp:(.text+0x26): undefined reference to `add(int, int)'</span>/usr/bin/ld: main2.cpp:<span class="token punctuation">(</span>.text+0xa4<span class="token punctuation">)</span>: undefined reference to `add<span class="token punctuation">(</span>int, int<span class="token punctuation">)</span>'collect2: error: ld returned 1 <span class="token keyword">exit</span> status</code></pre><p>需要为头文件add.h做更改</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">ifndef</span> ADD_H_</span><span class="token macro property">#<span class="token directive keyword">define</span> ADD_H_</span><span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span><span class="token keyword">extern</span> <span class="token string">"C"</span>  <span class="token comment" spellcheck="true">//C++</span><span class="token punctuation">{</span><span class="token macro property">#<span class="token directive keyword">endif</span></span>   <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span><span class="token punctuation">}</span><span class="token macro property">#<span class="token directive keyword">endif</span></span><span class="token macro property">#<span class="token directive keyword">endif</span> </span><span class="token comment" spellcheck="true">/* MAX_H_ */</span></code></pre><p>再重新编译动态链接库，再编译就可以。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rui @ rdma221 in ~/nfs/code/cc_code_test/dynamic_dll [12:38:49] C:1</span>$ gcc --shared -fPIC -o libadd.so add.c<span class="token comment" spellcheck="true"># rui @ rdma221 in ~/nfs/code/cc_code_test/dynamic_dll [12:40:35]</span>$ g++ -o main2 main2.cpp -L. -ladd<span class="token comment" spellcheck="true"># rui @ rdma221 in ~/nfs/code/cc_code_test/dynamic_dll [12:40:37]</span>$ ./main2Sum of 10 and 20 is 30Sum of 10 and 20 is 30</code></pre><h1 id="动态连接库更改时不重新编译主程序？"><a href="#动态连接库更改时不重新编译主程序？" class="headerlink" title="动态连接库更改时不重新编译主程序？"></a>动态连接库更改时不重新编译主程序？</h1><p>更改动态链接库内容如下</p><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>重新编译动态链接库但是不编译主程序，查看运行结果。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rui @ rdma221 in ~/nfs/code/cc_code_test/dynamic_dll [12:41:00]</span>$ gcc --shared -fPIC -o libadd.so add.c<span class="token comment" spellcheck="true"># rui @ rdma221 in ~/nfs/code/cc_code_test/dynamic_dll [12:43:18]</span>$ ./main2Sum of 10 and 20 is 60Sum of 10 and 20 is 60</code></pre><p>说明在更改动态库时不需要重新编译主程序也能够生效。</p><p>如果是静态库呢？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>家里产的茶叶</title>
      <link href="/posts/e1ceeb7b/"/>
      <url>/posts/e1ceeb7b/</url>
      
        <content type="html"><![CDATA[<h1 id="来自安徽大别山的茶叶"><a href="#来自安徽大别山的茶叶" class="headerlink" title="来自安徽大别山的茶叶"></a>来自安徽大别山的茶叶</h1><p>虽然清明节在昨天已经过去，但是我们家那边的茶才上市不到一周。因为我们家深处大别山，海拔较高，温度低，所以茶叶上市要比正常的晚很多。茶叶从村里的农户里收集，然后在我家用一些机器进行加工。</p><p>我家主推的有毛峰和禅茶两种。目前上市的都是所谓的明前茶，茶叶较嫩，口感很好，喜欢绿茶或者想尝试绿茶的可以试试。<strong>两种价格都是400-500一斤，价格区别主要是茶叶的嫩老大小程度。价格高的相对于更加嫩，叶片更小，口感更好。</strong></p><p>之前也已经有V友购买支持过，可以看后面的相关图片。</p><h2 id="毛峰"><a href="#毛峰" class="headerlink" title="毛峰"></a>毛峰</h2><p>特点: 口感清香，外型比较好看。</p><p><img src="https://s1.ax1x.com/2022/03/09/bfkC1H.png" alt="image-20220309221727955"></p><p><img src="https://s2.loli.net/2024/04/06/TkGlOjngH1ouRxF.png" alt=""></p><h2 id="禅茶"><a href="#禅茶" class="headerlink" title="禅茶"></a>禅茶</h2><p>口感柔和，我平常自己喝的就是这个。</p><p><img src="https://s2.loli.net/2024/04/06/6iqy3gWDHRozxfC.png" alt="禅茶"></p><p><img src="https://img.hifool.cn/typora/20240406101017.png" alt=""></p><p><img src="https://img.hifool.cn/typora/20240406101323.png" alt=""></p><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>有朋友问我茶叶为了防腐，会做另外的工艺吗？比如添加剂之类的吗？市场上销售的我不太清楚，我只知道我家的茶叶是真正零添加，防腐是靠足够的干+保鲜库+密封，真正的纯天然绿色产物。所以大家买回去一定要尽量密封保存，放在冰箱冷藏室效果更佳。否则茶叶没有保管好后，轻则茶汤发红味道不佳，重则发霉。</p><h1 id="更多照片"><a href="#更多照片" class="headerlink" title="更多照片"></a>更多照片</h1><p><img src="https://s1.ax1x.com/2022/03/09/bfkIbt.jpg" alt="1"></p><p><img src="https://s1.ax1x.com/2022/03/09/bfk5DI.jpg" alt="2"><br><img src="https://s1.ax1x.com/2022/03/09/bfkTVP.jpg" alt="3"></p><p><img src="https://s1.ax1x.com/2022/03/09/bfkt4U.png" alt="image-20220309222130065"></p><p><img src="https://fgimg.top/i/2024/04/06/6610bc066c9f8.png" alt=""></p><p>![image-20240406101437225](/Users/zhangrui/Library/Application Support/typora-user-images/image-20240406101437225.png)</p><h2 id="V友购买"><a href="#V友购买" class="headerlink" title="V友购买"></a>V友购买</h2><h3 id="V友1"><a href="#V友1" class="headerlink" title="V友1"></a>V友1</h3><p>非常感谢这位V友的支持，自从2022年年买了一次以后，2023年新茶季和2024年新茶季都是他push我的，我太佛系了…</p><p><img src="https://s2.loli.net/2024/04/06/WukMmtfvIoTzL9d.jpg" alt=""></p><h3 id="V友2"><a href="#V友2" class="headerlink" title="V友2"></a>V友2</h3><p>今年2月份，我在别人帖子的回复中推荐了一下自己的茶叶，感谢V友的支持。</p><p><img src="https://img.hifool.cn/typora/Screenshot_2024-04-06-10-22-36-022_com.tencent.mm-edit.jpg" alt=""></p><h3 id="V友3"><a href="#V友3" class="headerlink" title="V友3"></a>V友3</h3><p>虽然包装很简陋，但是里面是好东西哦。也可以加钱使用精品礼盒装，方便送人。</p><p><img src="https://img.hifool.cn/typora/Screenshot_2024-04-06-10-31-15-788_com.tencent.mm-edit.jpg" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
