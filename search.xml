<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux中使用代理</title>
      <link href="/posts/setting-proxy-in-linux/"/>
      <url>/posts/setting-proxy-in-linux/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>由于国内网络环境的原因，在访问某些网站时速度较慢或者干脆不能访问，所以我们需要通过代理的方式来加速我们的网络，在windows中相比大家都已经非常熟练，那么在服务器中如何使用代理加速自己的网络呢？下面就让小编带大家来学习一下吧。</p><h1 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>使用袋里的前提是你要能够fan qiang，可以自己搭建，也可以购买。如果没有的话你可以购买我现在使用的，一个月12元挺划算的，从2019年2月至今都平稳运行，即使在重大节日期间也能够正常使用。windows，mac，ios， 安卓都能使用。可以点击<a href="https://www.speederss.best/auth/register?code=HgGm" target="_blank" rel="noopener">这里注册</a>, 注册完成后，根据<a href="https://speeder.im/user/tutorial" target="_blank" rel="noopener">教程</a>设置相应的客户端。</p><h3 id="windows配置"><a href="#windows配置" class="headerlink" title="windows配置"></a>windows配置</h3><ol><li><p>按照<a href="https://www.speederss.best/user/tutorial?os=windows&amp;client=cfw" target="_blank" rel="noopener">教程</a>中配置好以后，打开软件会是这个样子</p><p><img src="https://img.zhangruiahu.cn/typora/20200913103154.png" alt="clash主界面"></p><p>可以在<code>Proxies</code>界面看到所有的节点，可以切换不同的节点。</p><p><img src="https://img.zhangruiahu.cn/typora/20200913103229.png" alt="clash Proxies界面"></p></li><li><p><code>General</code>界面中的<code>System Proxy</code>开关为是否启动代理。当你想上google的时候就打开他，不想用的时候就关闭他。</p></li><li><p><code>General</code>界面中的<code>Allow lan</code>开关为是否允许局域网中的其他设备使用此代理。为了能够在我们其他的设备上（例如linux服务器中）使用这个代理，因此我们需要打开这个开关。</p></li><li><p>获取自己的ip地址。打开cmd窗口，输入命令<code>ipconfig</code></p><p><img src="https://img.zhangruiahu.cn/typora/20200913104048.png" alt="获取windows的ip地址"></p><p>这里有多个ip地址。有无线网的ip地址<code>无线局域网适配器WLAN2</code>的<code>10.223.187.91</code>，有有线网的IP地址<code>以太网适配器 以太网</code>的<code>10.10.82.134</code>， 推荐使用有线网的ip地址，因为这个更稳定？</p></li></ol><h2 id="设置袋里"><a href="#设置袋里" class="headerlink" title="设置袋里"></a>设置袋里</h2><p>linux中设置袋里的方式比较多，我这里简单说几种我目前所用到的几种设置方式。</p><h3 id="通用袋里"><a href="#通用袋里" class="headerlink" title="通用袋里"></a>通用袋里</h3><ol><li><p>首先给出方法，再给出说明。</p><p>在命令行中运行如下命令。把<code>10.10.82.134</code>替换为你的windows的ip地址，具体方法参考上面。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">export</span> http_proxy<span class="token operator">=</span>http://10.10.82.134:7890<span class="token function">export</span> https_proxy<span class="token operator">=</span><span class="token variable">$http_proxy</span></code></pre><p>运行<code>curl www.google.com</code>，如果有一大串看不懂的字母出现，说明你已经成功了。</p></li><li><p>这种方式只会在当前的shell环境中有效，也就是说，当你重新打开一个窗口时，需要重新运行这两个export的命令才能够再次使用代理。</p></li></ol><h3 id="yum袋里"><a href="#yum袋里" class="headerlink" title="yum袋里"></a>yum袋里</h3><ol><li><p>有时候所在环境无法访问外网，或者yum下载非常慢，就可以使用代理了。配置yum代理需要有sudo权限才行。</p></li><li><p>在yum的配置文件中加入代理</p><pre><code>sudo vim /etc/yum.conf  # 加入下面几句proxy=https://10.10.82.134:7890proxy_username=usernameproxy_password=password</code></pre><p>把<code>10.10.82.134</code>替换为你的windows的ip地址，如果clash代理有设置用户名密码就在上面填上，如果没有就不需要<code>proxy_username</code>和<code>proxy_password</code>这两行。</p></li><li><p><strong>建议使用完后立即取消代理(注释添加的这些内容即可），否则代理服务器没有打开时无法使用yum会异常的难受。</strong></p></li></ol><h3 id="maven袋里"><a href="#maven袋里" class="headerlink" title="maven袋里"></a>maven袋里</h3><ol><li><p>在使用<code>mvn install</code>时有时会从google的网址上下载东西，所以可以在需要的时候配置一下代理。</p></li><li><p>如果存在<code>~/.m2/settings.xml</code>文件直接更改就可以，如果不存在，可以从maven的安装目录的conf文件中复制settings.xml文件到<code>~/.m2/</code>目录下，或者从<a href="https://img.zhangruiahu.cn/typora/settings.xml" target="_blank" rel="noopener">这里</a>下载，放到<code>~/.m2/</code>目录下。</p></li><li><p>编辑settings.xml文件，在<code>&lt;proxies&gt;</code>标签中添加或设置如下proxy字段。</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>proxy</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>optional<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>active</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>active</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>protocol</span><span class="token punctuation">></span></span>http<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>protocol</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--  &lt;username>proxyuser&lt;/username>      &lt;password>proxypass&lt;/password>  --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>host</span><span class="token punctuation">></span></span>10.10.82.134<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>host</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span><span class="token punctuation">></span></span>7890<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nonProxyHosts</span><span class="token punctuation">></span></span>local.net|some.host.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nonProxyHosts</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>proxy</span><span class="token punctuation">></span></span></code></pre><p>将其中的host中的ip换为你的windows的ip地址。</p></li><li><p>设置完成后，再次运行<code>mvn installl</code>就是通过代理的方式访问了。</p></li><li><p><strong>建议使用完后立即取消代理(注释添加的这些内容即可），否则代理服务器没有打开时无法使用<code>mvn install</code>会异常的难受。</strong></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼成果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MAC快速设置系统代理</title>
      <link href="/posts/MAC-setup-system-proxy-quickly/"/>
      <url>/posts/MAC-setup-system-proxy-quickly/</url>
      
        <content type="html"><![CDATA[<p>由于在宿舍中的网络只能访问内网，而实验室中的电脑可以访问外网。所以在实验室电脑搭建一个代理服务器（clash for windows就可以解决这个问题了），宿舍电脑通过设置代理的方式来实现访问外网。由于有时mac也要使用clash，开启后就会将所有的代理都设置为127.0.0.1这个IP，要访问实验室电脑的IP需要再次设置IP和端口。所以嫌每次手动设置http代理很麻烦，因此尝试使用脚本的方式来解决这个问题。</p><p>通常mac中设置代理的方式是通过网络-&gt;高级-&gt;代理中设置http代理和https代理来实现的。为了不想每次都输入IP地址，经过搜寻后发现了使用<code>networksetup</code>命令来设置mac的代理。因此开启了该命令的学习使用过程。</p><p>首先确定你是通过什么方式上网的，可能是有线，wifi或者其他的。通过以下命令获取你的<code>networkservice</code>。</p><pre class=" language-bash"><code class="language-bash">➜  ~ networksetup -listallnetworkservicesAn asterisk <span class="token punctuation">(</span>*<span class="token punctuation">)</span> denotes that a network <span class="token function">service</span> is disabled.CDC DEVICEAX88179 USB 3.0 to Gigabit EthernetWi-FiBluetooth PANThunderbolt Bridge➜  ~</code></pre><p>我是用的是wifi进行上网的， 所以我要设置wifi代理，因此我的<code>networkservice=Wi-Fi</code></p><p>详细的使用等我不懒了再来更新…</p><p>先贴出最终的脚本：</p><pre class=" language-bash"><code class="language-bash"><span class="token keyword">function</span> pron<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    networkservice<span class="token operator">=</span>Wi-Fi    yourIP<span class="token operator">=</span>192.168.1.123    yourHTTPPort<span class="token operator">=</span>7890    yourSocksPort<span class="token operator">=</span>7891    <span class="token keyword">echo</span> Open web proxy <span class="token keyword">for</span> networkservice: <span class="token variable">$networkservice</span>    <span class="token function">sudo</span> networksetup -setwebproxy <span class="token variable">$networkservice</span> <span class="token variable">$yourIP</span> <span class="token variable">$yourHTTPPort</span>  <span class="token comment" spellcheck="true">#设置Web HTTP代理</span>    <span class="token function">sudo</span> networksetup -setsecurewebproxy <span class="token variable">$networkservice</span> <span class="token variable">$yourIP</span> <span class="token variable">$yourHTTPPort</span>   <span class="token comment" spellcheck="true">#设置Web HTTPS代理</span>    <span class="token function">sudo</span> networksetup -setsocksfirewallproxy  <span class="token variable">$networkservice</span> <span class="token variable">$yourIP</span> <span class="token variable">$yourSocksPort</span>   <span class="token comment" spellcheck="true">#设置Web Socks5代理</span>    <span class="token keyword">echo</span> Done<span class="token punctuation">}</span><span class="token keyword">function</span> prof<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    networkservice<span class="token operator">=</span>Wi-Fi    <span class="token keyword">echo</span> Close web proxy <span class="token keyword">for</span> networkservice: <span class="token variable">$networkservice</span>    <span class="token function">sudo</span> networksetup -setwebproxystate <span class="token variable">$networkservice</span> off   <span class="token comment" spellcheck="true">#关闭Web HTTP代理</span>    <span class="token function">sudo</span> networksetup -setsecurewebproxystate <span class="token variable">$networkservice</span> off   <span class="token comment" spellcheck="true">#关闭Web HTTPS代理</span>    <span class="token function">sudo</span> networksetup -setsocksfirewallproxystate  <span class="token variable">$networkservice</span> off   <span class="token comment" spellcheck="true">#关闭Web Socks5代理</span>    <span class="token keyword">echo</span> Done<span class="token punctuation">}</span></code></pre><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li>如何优雅地一键实现 macOS 网络代理切换<a href="https://debugtalk.com/post/switch-macOS-web-proxy-in-elegant-way/" target="_blank" rel="noopener">https://debugtalk.com/post/switch-macOS-web-proxy-in-elegant-way/</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MAC </tag>
            
            <tag> 不学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OneDrive5T注册地址</title>
      <link href="/posts/d36c02d3/"/>
      <url>/posts/d36c02d3/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.shanyemangfu.com/office-365.html" target="_blank" rel="noopener">https://www.shanyemangfu.com/office-365.html</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重装系统时所要备份的文件</title>
      <link href="/posts/Files-to-be-backed-up-when-reinstalling-the-system/"/>
      <url>/posts/Files-to-be-backed-up-when-reinstalling-the-system/</url>
      
        <content type="html"><![CDATA[<p>鉴于系统长时间使用后，会留下各种垃圾占用磁盘空间。看着不爽，所以计划在存储空间仅剩一点时给电脑重装系统。</p><h1 id="MAC电脑"><a href="#MAC电脑" class="headerlink" title="MAC电脑"></a>MAC电脑</h1><h2 id="需要备份的文件"><a href="#需要备份的文件" class="headerlink" title="需要备份的文件"></a>需要备份的文件</h2><h3 id="常规文件"><a href="#常规文件" class="headerlink" title="常规文件"></a>常规文件</h3><ol><li>各种课程中的课程文件。</li><li>图片</li><li>音乐-Music文件夹中的歌曲</li><li>桌面文件</li><li>看看下载文件夹中有没有需要的。</li></ol><h3 id="软件使用记录"><a href="#软件使用记录" class="headerlink" title="软件使用记录"></a>软件使用记录</h3><ol><li>微信聊天记录</li><li>qq发送到我的电脑记录</li><li>telegram传输文件记录</li></ol><h3 id="开发类文件"><a href="#开发类文件" class="headerlink" title="开发类文件"></a>开发类文件</h3><ol><li>ClionProjects</li><li>IdeaProjects</li><li>mygopath</li><li>PycharmProjects</li><li>VscodeProjects</li></ol><h2 id="需要下载的软件"><a href="#需要下载的软件" class="headerlink" title="需要下载的软件"></a>需要下载的软件</h2><h3 id="必装软件"><a href="#必装软件" class="headerlink" title="必装软件"></a>必装软件</h3><ol><li>clashx：<a href="https://github.com/yichengchen/clashX/releases" target="_blank" rel="noopener">https://github.com/yichengchen/clashX/releases</a></li><li>chrome</li><li>vscode</li><li>itrem2</li><li>微信，qq，telegram</li><li>IINA</li><li>App Cleaner &amp; Uninstaller</li><li>Typora</li><li>istat menus</li></ol><h3 id="开发类软件"><a href="#开发类软件" class="headerlink" title="开发类软件"></a>开发类软件</h3><ol><li>JB全家桶，使用toolbox下载</li><li>easyconnect</li><li>microsoft remote desktop（天翼云盘-我的应用-mac软件）</li></ol><h3 id="办公类软件"><a href="#办公类软件" class="headerlink" title="办公类软件"></a>办公类软件</h3><ol><li>正版软件官网下载的office全家桶</li><li>latex</li><li>腾讯会议，钉钉</li><li>Mendeley </li><li>copytranslator</li><li>PDF Expert</li><li>有道云笔记</li><li>天翼云盘</li></ol><h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><ol><li>QQ音乐</li><li>NeatDownloadManager</li><li>PicGo</li><li>ScreenFlow</li><li>Loopback</li></ol><hr><h1 id="windows电脑"><a href="#windows电脑" class="headerlink" title="windows电脑"></a>windows电脑</h1><p>等我回学校了实际操作起来了再来更新。</p><h1 id="安卓手机"><a href="#安卓手机" class="headerlink" title="安卓手机"></a>安卓手机</h1><ol><li>备份微信聊天记录，qq聊天记录</li><li>备份相册图片</li><li>备份通话录音</li><li>同步通讯录</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 备份工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 webhook 自动更新博客</title>
      <link href="/posts/Use-Webhook-To-Update-Blog/"/>
      <url>/posts/Use-Webhook-To-Update-Blog/</url>
      
        <content type="html"><![CDATA[<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><p>以下文章转载自<a href="https://blog.cugxuan.cn/2019/03/23/Git/Use-Webhook-To-Update-Blog/" target="_blank" rel="noopener">Xuan’s blog</a>, 为了防止博主删除文章后找不到，所以复制一份到此进行保存。如果有侵权现象，请联系博主<a href="mailto:zhangrui@zhangruiahu.cn">zhangrui@zhangruiahu.cn</a>进行删除。感谢理解</p><ul><li><strong>本文作者：</strong> 泫</li><li><strong>本文链接：</strong> <a href="https://blog.cugxuan.cn/2019/03/23/Git/Use-Webhook-To-Update-Blog/" target="_blank" rel="noopener">https://blog.cugxuan.cn/2019/03/23/Git/Use-Webhook-To-Update-Blog/</a></li><li><strong>版权声明：</strong> 本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">BY-NC-ND</a> 许可协议。转载请注明出处！</li></ul><p>因为实在受不了 <code>Coding Page</code> 的速度，腾讯云的 CDN 感觉也很不好用，将自己的博客挂在了自己的服务器上。但是每次在写完之后都需要到服务器上执行 <code>git pull</code>过于麻烦，所以使用了 GitHub 上面的开源项目 <a href="https://github.com/adnanh/webhook" target="_blank" rel="noopener">webhook</a>，<strong>当然 webhook 的作用不仅仅是自动更新部署博客啊，啥都能干 O__O …</strong></p><h1 id="Webhook"><a href="#Webhook" class="headerlink" title="Webhook"></a>Webhook</h1><p>对于 webhook 来说，可以自己写一个脚本来接受信息，思路很简单，运行一个 <code>HTTP Server</code>，监听服务器的某个端口，如果有消息传递过来，那么就运行事先写好的脚本，来完成 webhook 的功能即可。<br><img src="https://image.cugxuan.cn/git/webhook.png" alt="webhook.png"></p><p>但是为了方便使用和维护，还是选择了开源的项目</p><h1 id="什么是-webhook？"><a href="#什么是-webhook？" class="headerlink" title="什么是 webhook？"></a>什么是 webhook？</h1><p>webhook 的目标只是做他应该做的事</p><ol><li>接受 request</li><li>解析 HTTP 首部，负载内容和请求变量</li><li>检测是否满足钩子的特定条件</li><li>通过命令行参数或环境变量将指定的参数传递给指定的命令</li></ol><p>其他所有的事情都是 <code>命令作者</code> 的责任</p><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><p>我的博客是 hexo 构建，构建出来的结果都是静态文件，使用 Nginx 挂在服务器上的，以下的内容都需要在服务器上执行</p><h2 id="安装-webhook"><a href="#安装-webhook" class="headerlink" title="安装 webhook"></a>安装 webhook</h2><p>这里推荐三种安装方法，<strong>github 下载速度可能很慢</strong>，推荐使用系统源安装的方式</p><h3 id="使用系统源的安装方式"><a href="#使用系统源的安装方式" class="headerlink" title="使用系统源的安装方式"></a>使用系统源的安装方式</h3><p>如果是 Ubuntu 系统，可以直接使用下面的命令进行安装：</p><pre><code>$ sudo apt-get update$ sudo apt-get install webhook</code></pre><h3 id="使用-github-下载"><a href="#使用-github-下载" class="headerlink" title="使用 github 下载"></a>使用 github 下载</h3><p>webhook 的 <a href="https://github.com/adnanh/webhook/releases" target="_blank" rel="noopener">release 链接</a>，找到对应的选项 <code>webhook-linux-amd64.tar.gz</code> 右键复制链接 ，当前写博客时的最新版本链接为 <a href="https://github.com/adnanh/webhook/releases/download/2.6.11/webhook-linux-amd64.tar.gz" target="_blank" rel="noopener">https://github.com/adnanh/webhook/releases/download/2.6.11/webhook-linux-amd64.tar.gz</a></p><p>具体操作如下：</p><pre><code>// 下载对应的软件$ wget https://github.com/adnanh/webhook/releases/download/2.6.11/webhook-linux-amd64.tar.gz// 解压进入$ tar -zxf tar -zxf webhook-linux-amd64.tar.gz &amp;&amp; cd webhook-linux-amd64/$ ./webhook[webhook] 2020/02/23 22:44:43 couldn't load any hooks from file!aborting webhook execution since the -verbose flag is set to false.If, for some reason, you want webhook to start without the hooks, either use -verbose flag, or -nopanic</code></pre><h3 id="Golang-环境下安装"><a href="#Golang-环境下安装" class="headerlink" title="Golang 环境下安装"></a>Golang 环境下安装</h3><p>首先安装 Golang 环境（这里略过），然后安装 webhook，这里注意需要已经设置了 GOPATH</p><pre><code>// 安装对应的工具$ go get github.com/adnanh/webhook// 安装完成之后可以在 $GOPATH/bin 下找到对应的执行文件$ echo $GOPATH/root/go$ ls /root/go/binwebhook// 将路径写入到 shell 可以直接执行$ vi ~/.bash_profile// 在文件最后一行加入对应内容export PATH="/root/go/bin:$PATH"// 更新文件使其生效$ source ~/.bash_profile// 测试命令是否已经成功安装，得到输出说明安装完成$ webhook[webhook] 2020/02/23 22:44:43 couldn't load any hooks from file!aborting webhook execution since the -verbose flag is set to false.If, for some reason, you want webhook to start without the hooks, either use -verbose flag, or -nopanic</code></pre><h2 id="配置-webhook"><a href="#配置-webhook" class="headerlink" title="配置 webhook"></a>配置 webhook</h2><p>下一步是定义您希望 <a href="https://github.com/adnanh/webhook" target="_blank" rel="noopener">webhook</a> 提供的一些钩子，新建一个 <code>hook.json</code> 文件<br>该文件将包含 webhook 将提供的一系列钩子。检查 <a href="https://github.com/adnanh/webhook/blob/master/docs/Hook-Definition.md" target="_blank" rel="noopener">Hook 定义页面</a> 以查看钩子可以包含的属性的详细描述以及如何使用它们。</p><h2 id="定义和部署"><a href="#定义和部署" class="headerlink" title="定义和部署"></a>定义和部署</h2><p>下面的内容在 <code>~/notes-hooks</code> 文件夹下执行<br>让我们定义一个名为 <code>redeploy-webhook</code> 的简单钩子，新建一个 <code>redeploy.sh</code> 文件，确保你的 bash 脚本在顶部有 <code>#!/bin/sh</code></p><pre><code>#!/bin/shgit pull</code></pre><p>写完之后注意需要给文件增加执行权限<br><code>$ chmod a+x redeploy.sh</code><br>然后新建一个 <code>hooks.json</code> 文件，看代码就可以知道意思了</p><pre><code>[  {    "id": "redeploy-blog",    "execute-command": "/home/ubuntu/notes-hooks/redeploy.sh",    "command-working-directory": "/home/ubuntu/blog.cugxuan.cn"  }]</code></pre><p>这个 <code>hooks.json</code> 文件中各项的作用一看便知，注意 id 和监听的 URL 对应，webhook 默认监听的端口是 9000，根据上面写的可知监听的 URL 为 <code>http://yoursite.com:9000/hooks/redeploy-blog</code>，接下来执行命令部署即可</p><pre><code># 前台运行的方法，可以方便测试$ ./webhook -hooks hooks.json -verbose# 守护进程简单运行，这样就可以部署了$ nohup ./webhook -hooks hooks.json -verbose &amp;</code></pre><p>然后将 <code>http://yoursite.com:9000/hooks/redeploy-blog</code> 填到你的 GitHub 网站对应项目页面 <code>Settings → Webhooks</code> 中即可</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>写好博客然后 push，GitHub 收到你的更新之后就会触发 webhook 发送到服务器的监听位置，然后服务器完成更新部署<br>同时你可以在 GitHub 的 webhook 页面中看到发送的情况，还可以点击 Redeliver 重新测试<br><img src="https://image.cugxuan.cn/git/webhook-redeliver.png" alt="webhook-redeliver"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 转载文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的电影院</title>
      <link href="/posts/my-own-cinema/"/>
      <url>/posts/my-own-cinema/</url>
      
        <content type="html"><![CDATA[<h1 id="国产电影"><a href="#国产电影" class="headerlink" title="国产电影"></a>国产电影</h1><h2 id="人再囧途之泰囧"><a href="#人再囧途之泰囧" class="headerlink" title="人再囧途之泰囧"></a>人再囧途之泰囧</h2><div id="mmedia-utsKtvjS"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-utsKtvjS'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'none',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/movies/%E4%BA%BA%E5%86%8D%E5%9B%A7%E9%80%94%E4%B9%8B%E6%B3%B0%E5%9B%A7.rmvb', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败"><a href="#骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败" class="headerlink" title="骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败"></a>骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败</h2><div id="mmedia-gTdxNaPs"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-gTdxNaPs'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/movies/骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h1 id="欧美电影"><a href="#欧美电影" class="headerlink" title="欧美电影"></a>欧美电影</h1><h2 id="速度与激情系列"><a href="#速度与激情系列" class="headerlink" title="速度与激情系列"></a>速度与激情系列</h2><h3 id="速度与激情9"><a href="#速度与激情9" class="headerlink" title="速度与激情9"></a>速度与激情9</h3><div id="mmedia-MQtclVCM"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-MQtclVCM'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'none',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/movies/%E9%80%9F%E5%BA%A6%E4%B8%8E%E6%BF%80%E6%83%85%E7%B3%BB%E5%88%97/%E9%80%9F%E5%BA%A6%E4%B8%8E%E6%BF%80%E6%83%85%EF%BC%9A%E7%89%B9%E5%88%AB%E8%A1%8C%E5%8A%A82019.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="生化危机系列"><a href="#生化危机系列" class="headerlink" title="生化危机系列"></a>生化危机系列</h2><h3 id="生化危机2"><a href="#生化危机2" class="headerlink" title="生化危机2"></a>生化危机2</h3><div id="mmedia-EQobRJeJ"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-EQobRJeJ'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'none',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/movies/%E7%94%9F%E5%8C%96%E5%8D%B1%E6%9C%BA%E7%B3%BB%E5%88%97%2F%E7%94%9F%E5%8C%96%E5%8D%B1%E6%9C%BA2.rmvb', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="其他系列"><a href="#其他系列" class="headerlink" title="其他系列"></a>其他系列</h2><h3 id="泰坦尼克号"><a href="#泰坦尼克号" class="headerlink" title="泰坦尼克号"></a>泰坦尼克号</h3><div id="mmedia-POOrocds"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-POOrocds'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'none',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/movies/泰坦尼克号.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="演唱会"><a href="#演唱会" class="headerlink" title="演唱会"></a>演唱会</h2><h3 id="Taylor-Swift-–-The-1989-World-Tour-Sydney-Australia-28-11-2015-WebDL-1080p"><a href="#Taylor-Swift-–-The-1989-World-Tour-Sydney-Australia-28-11-2015-WebDL-1080p" class="headerlink" title="Taylor Swift – The 1989 World Tour (Sydney Australia 28.11.2015) [WebDL 1080p]"></a>Taylor Swift – The 1989 World Tour (Sydney Australia 28.11.2015) [WebDL 1080p]</h3><div id="mmedia-ziAkIIsE"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-ziAkIIsE'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'none',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/movies/Taylor-Swift–The-1989-World-Tour.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <p>骁话一下：盘一盘俄罗斯权力网，看普京为何退休失败.mp4</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 不学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种OneDrive网盘工具总结</title>
      <link href="/posts/OneDrive-pan/"/>
      <url>/posts/OneDrive-pan/</url>
      
        <content type="html"><![CDATA[<h1 id="工具列表"><a href="#工具列表" class="headerlink" title="工具列表"></a>工具列表</h1><h2 id="OFDI"><a href="#OFDI" class="headerlink" title="OFDI"></a>OFDI</h2><p>部署地址 <a href="https://github.com/vcheckzen/FODI" target="_blank" rel="noopener">https://github.com/vcheckzen/FODI</a>.    <a href="https://www.shanyemangfu.com/cf-fodi.html" target="_blank" rel="noopener">https://www.shanyemangfu.com/cf-fodi.html</a></p><p>demo <a href="https://logi.im/fodi.html" target="_blank" rel="noopener">https://logi.im/fodi.html</a></p><p><a href="https://www.shanyemangfu.com/cf-fodi.html" target="_blank" rel="noopener">https://www.shanyemangfu.com/cf-fodi.html</a></p><p>效果</p><div id="mmedia-bHbkFuCh"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-bHbkFuCh'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://tight-bar-e3b3.logi.workers.dev/?file=/Media/Video/Common/Confession.of.Murder.2012.KOREAN.1080p.BluRay.H264.AAC-VXT/Confession.of.Murder.2012.KOREAN.1080p.BluRay.H264.AAC-VXT.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="magic"><a href="#magic" class="headerlink" title="magic"></a>magic</h2><p>项目地址: <a href="https://github.com/YukiCoco/OLAINDEX-Magic" target="_blank" rel="noopener">https://github.com/YukiCoco/OLAINDEX-Magic</a></p><p>效果: <a href="https://magic.yukino.co/home/1" target="_blank" rel="noopener">https://magic.yukino.co/home/1</a></p><div id="mmedia-aofvdGoc"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-aofvdGoc'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://magic.yukino.co/down/1/7.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="oneindex萌化版"><a href="#oneindex萌化版" class="headerlink" title="oneindex萌化版"></a>oneindex萌化版</h2><p>项目地址：<a href="https://github.com/Layne666/oneindex" target="_blank" rel="noopener">https://github.com/Layne666/oneindex</a></p><p>效果：<a href="https://pan.layne666.cn/" target="_blank" rel="noopener">https://pan.layne666.cn/</a></p><div id="mmedia-MamlCmEM"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-MamlCmEM'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://pan.layne666.cn/%E7%94%B5%E5%BD%B1/%E5%A4%A7%E4%BE%A6%E6%8E%A2%E7%9A%AE%E5%8D%A1%E4%B8%98/%E5%A4%A7%E4%BE%A6%E6%8E%A2%E7%9A%AE%E5%8D%A1%E4%B8%98.BD1280%E9%AB%98%E6%B8%85%E4%B8%AD%E8%8B%B1%E5%8F%8C%E5%AD%97%E7%89%88.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="OneManager-php"><a href="#OneManager-php" class="headerlink" title="OneManager-php"></a>OneManager-php</h2><p>项目地址: <a href="https://github.com/qkqpttgf/OneManager-php" target="_blank" rel="noopener">https://github.com/qkqpttgf/OneManager-php</a></p><p>效果: <a href="https://yun.rw/" target="_blank" rel="noopener">https://yun.rw/</a></p><div id="mmedia-FBQQcKoq"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-FBQQcKoq'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://yun.rw/DEMO/Videos/%E5%B0%91%E5%A5%B3%E6%97%B6%E4%BB%A3-Oh%21%28LG.HD%29.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="GONEList"><a href="#GONEList" class="headerlink" title="GONEList"></a>GONEList</h2><p>项目地址: <a href="https://github.com/qkqpttgf/OneManager-php" target="_blank" rel="noopener">https://github.com/qkqpttgf/OneManager-php</a></p><p>效果：<a href="https://gonelist.cugxuan.cn/" target="_blank" rel="noopener">https://gonelist.cugxuan.cn</a></p><div id="mmedia-jSPIDsJu"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-jSPIDsJu'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://gonelist.cugxuan.cn/d/exampleType/video/%E3%80%90%E9%AB%98%E6%B8%85%E3%80%91%E6%88%91%E6%98%AF%E8%B0%81-%E6%B2%A1%E6%9C%89%E7%BB%9D%E5%AF%B9%E5%AE%89%E5%85%A8%E7%9A%84%E7%B3%BB%E7%BB%9F.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>效果</p><div id="mmedia-JlWMRVQn"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-JlWMRVQn'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/周杰伦 - 说好不哭 (with 五月天阿信).mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OneDrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频课程</title>
      <link href="/posts/7487cd50/"/>
      <url>/posts/7487cd50/</url>
      
        <content type="html"><![CDATA[<h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h1><p>没有记录，主要讲网络的发展与rdma的应用，计算机网络相关的东西。</p><h1 id="Day2"><a href="#Day2" class="headerlink" title="Day2"></a>Day2</h1><p>主要讲RDMA verbs api的使用，下面是3点以后的视频</p><div id="mmedia-GPiESeFX"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-GPiESeFX'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day02-15-16.mov', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h1 id="Day3"><a href="#Day3" class="headerlink" title="Day3"></a>Day3</h1><h2 id="9点到10点"><a href="#9点到10点" class="headerlink" title="9点到10点"></a>9点到10点</h2><p>由于录制不熟练，分了三段</p><p>第一段</p><div id="mmedia-iVYIYXHU"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-iVYIYXHU'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-09-10-1.mov', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <p>第二段</p><div id="mmedia-FigIMGic"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-FigIMGic'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: ' https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-09-10-2.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <p>第三段</p><div id="mmedia-GFOuOPbw"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-GFOuOPbw'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-09-10-3.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="10点到11点"><a href="#10点到11点" class="headerlink" title="10点到11点"></a>10点到11点</h2><div id="mmedia-ACVjORAu"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-ACVjORAu'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-10-11.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="11点到12点"><a href="#11点到12点" class="headerlink" title="11点到12点"></a>11点到12点</h2><div id="mmedia-McwoztwA"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-McwoztwA'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-11-12.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="12点到13点"><a href="#12点到13点" class="headerlink" title="12点到13点"></a>12点到13点</h2><div id="mmedia-DEsUFMAS"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-DEsUFMAS'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-12-13.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="14点到15点"><a href="#14点到15点" class="headerlink" title="14点到15点"></a>14点到15点</h2><div id="mmedia-qwWnOGur"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-qwWnOGur'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-14-15-01.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <div id="mmedia-ateEKsaH"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-ateEKsaH'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-14-15-2.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="15点到16点"><a href="#15点到16点" class="headerlink" title="15点到16点"></a>15点到16点</h2><div id="mmedia-JSzhWUjH"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-JSzhWUjH'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-15-16.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="18-19meeting"><a href="#18-19meeting" class="headerlink" title="18-19meeting"></a>18-19meeting</h2><div id="mmedia-qZhgePrz"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-qZhgePrz'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day03-18-19-meeting.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h1 id="Day4"><a href="#Day4" class="headerlink" title="Day4"></a>Day4</h1><h2 id="9点到10点-1"><a href="#9点到10点-1" class="headerlink" title="9点到10点"></a>9点到10点</h2><div id="mmedia-dcqPetbI"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-dcqPetbI'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-09-10.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="10点到11点-1"><a href="#10点到11点-1" class="headerlink" title="10点到11点"></a>10点到11点</h2><div id="mmedia-KicMiqaL"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-KicMiqaL'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-10-11.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="11点到12点-1"><a href="#11点到12点-1" class="headerlink" title="11点到12点"></a>11点到12点</h2><div id="mmedia-TOpiXiQw"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-TOpiXiQw'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-11-12.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="12点到13点-1"><a href="#12点到13点-1" class="headerlink" title="12点到13点"></a>12点到13点</h2><div id="mmedia-TVHFradC"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-TVHFradC'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-12-13.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="14点到15点-1"><a href="#14点到15点-1" class="headerlink" title="14点到15点"></a>14点到15点</h2><div id="mmedia-ULKYlGNs"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-ULKYlGNs'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-14-15.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="15点到16点-1"><a href="#15点到16点-1" class="headerlink" title="15点到16点"></a>15点到16点</h2><div id="mmedia-LmZiuPIM"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-LmZiuPIM'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: '   https://onedrive.ruitest.workers.dev?file=/videos/RdmaCourse/Day04-15-16.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <p>聊天记录</p><blockquote><p>Timothy Tan对所有人说： (9:39 上午)<br> Could you explain again why the server only needs to wait for one completion, instead of waiting for the same amount as tx_depth? <br>Dai Zhang对所有人说： (9:45 上午)<br> Is the NIC truly duplex, that is, can it write to RR receive buffer and read from SR send buffer at the same time, or it has to do them without overlap. <br>Timothy Tan对所有人说： (9:47 上午)<br> Okok thanks! <br>闫力敏对所有人说： (9:47 上午)<br> thankx <br>Timothy Tan对所有人说： (9:56 上午)<br> For the last point, is it correct to say that the NIC can overcome PCI latency by reading more data from the memory even before previous packets have started sending in the network? <br>Gil对所有人说： (9:58 上午)<br> Yes, it is. <br>Dai Zhang对所有人说： (10:00 上午)<br> If read &amp; write can be done at the same time, even though we don’t care about the actual data, will it cause some issues if we try to read/write the same part of memory from NIC, for example, conflicts in pcie bus or some software issues  (sorry for aggressive guesses, I have no idea about the pcie system). In ping-pong example, the SR/RR bufs are at the same place. <br>Dai Zhang对所有人说： (10:08 上午)<br> Thank you! <br>Timothy Tan对所有人说： (10:25 上午)<br> Not yet :( <br>Xinhao Kong对所有人说： (10:25 上午)<br> run the examples/ucp_client_server successfully <br>Lih Wei对所有人说： (10:25 上午)<br> Yes, but incomplete <br>Yuwei Xu对所有人说： (10:25 上午)<br> Yes <br>Dai Zhang对所有人说： (10:25 上午)<br> yes <br>zmc对所有人说： (10:25 上午)<br> Yes, but incomplete</p><p>Lih Wei对所有人说： (10:49 上午)<br> If we are not using the worker function on a separate thread, is there any guarantees in terms of how long the worker function will take to return?</p><p>Also, are there any dangers of lost data if we call the worker too infrequently? It seems that as long as we use separate buffers, regardless if we use eager or rendezvous, it should be safe? For the first part, coming from a perspective of cooperative multi-processing, if I have many requests in-flight, is there danger of starving my computations? Thank you </p><p>Qiang Wang对所有人说： (11:18 上午)<br> Hi, professor. It seems that the code tries to check the status in a loop while the request is uncompleted. Is it inefficient? Ok. I see.</p><p>Dai Zhang对所有人说： (11:39 上午)<br> Avoid disorder <br>Lih Wei对所有人说： (11:39 上午)<br> Is it some form of flow control? I see <br>Lih Wei对所有人说： (11:45 上午)<br> In UCX, is there any unreliable/UDP-like paradigm? Or is there a way to broadcast data (point-to-multipoint)? Thank you <br>Lih Wei对所有人说： (12:33 下午)<br> 6 seconds? *10 Apologies, I might have missed it, why can’t all the processes receive simultaneously? I’m assuming each process is on a different link <br>Lih Wei对所有人说： (12:39 下午)<br> I think I get it, thank you <br>Qiang Wang对所有人说： (12:48 下午)<br> Hi. Professor. I am still confused that why the shift algorithm is O(n) for MPI_Alltoall. Is it because that all the received processes can deal with data in parallel. Could you explain more, please?</p><p>Gil对所有人说： (1:09 下午)<br> If all processes will send data to one process at the same time, it takes { (N * DataSize) / BW ) time for this process to receive this data. Before the shift algorithm, in each [i Before the shift algorithm, in each [I] iteration we have all the processes sending to the i’th process. <br>Gil对所有人说： (1:11 下午)<br> So each iteration is in the order of N (number of processes). Now we have N such iterations (for loop) so we end up with o(N^2) So the problem is that we send from all processes to one process at the same time. <br>Gil对所有人说： (1:13 下午)<br> When we say that a receiving process can receive data from multiple processes in parallel, it is still limited in the link BW <br>Qiang Wang对所有人说： (1:18 下午)<br> I see. So it is O(N^2) for “all the processes sending to the i’th process in each [i] iteration.”. What about the shift? Does it mean that we have each process sending data to different processes in each iteration? <br>Gil对所有人说： (1:36 下午)<br> Yes, this is the idea behind the shift scheme At each iteration, each process is sending data to a different process <br>Gil对所有人说： (1:37 下午)<br> At first iteration,<br>process 1 sends to process 2<br>process 2 sends to process 3<br>…<br>Process N sends to process 1 <br>Qiang Wang对所有人说： (1:39 下午)<br> I see. It is somehow like multi-processing. However both two methods can still be limited in the link BW. Thank you very much!</p></blockquote><h1 id="Day-5"><a href="#Day-5" class="headerlink" title="Day 5"></a>Day 5</h1><p>聊天记录</p><pre><code>Pengzhi Zhu对所有人说： (12:31 下午) The next session will begin at 2:00 pm Pengzhi Zhu对所有人说： (2:46 下午) We will have a 10 minutes break at 14:50 pm and come back at 3:00 pm geofeng对所有人说： (3:51 下午) 10m break let's back at 4pm thanks Dr. Li for the great presentation geofeng对所有人说： (4:02 下午) we are now QA session, any question is welcome 我对所有人说： (4:03 下午) When we install pmdk in the cluster ,it needs root to install. So we can not install it. Ok, thank you Dai Zhang对所有人说： (4:07 下午) An question about the TAG SEND interface. the tag_send interface takes in arguments like. "request = ucp_tag_send_nb(ep, bm_ctx.buf, 1, ucp_dt_make_contig(1), TAG, send_cb);" Dai Zhang对所有人说： (4:07 下午) where a **count**, and a **datatype**, are used to describe the buffer size. How's the underlying differences about these two args, or it is just a semantic explanation about the memory layout, and the underlying just sends "count x datatype" size of data block no matter how these two args are specified. Dai Zhang对所有人说： (4:09 下午) Yes, ucx Nothing in doc about the underlying mechanisms Cheng Li对所有人说： (4:14 下午) Thanks all. Enjoy the rest of your journey! Dai Zhang对所有人说： (4:14 下午) Another question, is there any way to separate polling completion with another worker from the one sending requests in UCX. It seems that UCX interface has to progress the same worker to trigger callbacks on sent request. Is that means we always need to schedule the cpu time between sending requests and processing completions at the same core in UCX.Lih Wei对所有人说： (4:15 下午) Hi Dai Zhang, allow me to try replying: UCP tag is still based on stream in underlying protocol. So it is possible that a partial transfer occurs. The need to specify the datatype and size is to ensure that a complete data element is presented when there is partial transfer. I was looking into the same questions as well, this is my conclusion from reading the source. But it is better if Gil can confirm geofeng对所有人说： (4:18 下午)Thanks Lih Wei, very good practice. In the mean time, I'm check with UCX R&amp;D team, will get back to you once I get feedback Dai Zhang对所有人说： (4:18 下午) But I think the semantic of completion is all or nothing, even though the underlying method transfer the data in many pieces, we can only get completion notification when all pieces gathered. Lih Wei对所有人说： (4:21 下午) That is true for tag, maybe this only applies for the ucp_stream_* functions more geofeng对所有人说： (4:22 下午) Good discussion! Lih Wei对所有人说： (4:24 下午) My other theory is that underlying buffer may be scattered if no contiguous buffer can be found, datatype is required to ensure that the splitting of buffer occur at data boundary Dai Zhang对所有人说： (4:27 下午) Good point. But it's a contiguous memory, the splitting and scattering needs an additional memory-copy. I think which the RDMA want to avoid. Dai Zhang对所有人说： (4:28 下午) But for the benefit of specifing size, I think the ucx interface chooses the right recv buffer size to avoid watsing memory. Is there some thing related to that? Just in eager mode. Qingchun Song对所有人说： (4:31 下午) Hi, All, if you have any questions, please write in chat window. Dai Zhang对所有人说： (4:32 下午) Another another question, about the interface changes. In UCX v1.9, there is a new tag_send_nbx interface. It seems the datatype is put into the params argument, not the first-class argument yet. Is the interface of UCX not stable yet? Dai Zhang对所有人说： (4:35 下午) ucs_status_ptr_t ucp_stream_send_nbx(ucp_ep_h ep, const void *buffer, size_t count, const ucp_request_param_t *param) Qingchun Song对所有人说： (4:35 下午) Everyone can give the comments. this is the open discussion time. Dai Zhang对所有人说： (4:35 下午) The word may be improper. I means the datatype is not shown in function prototype Qingchun Song对所有人说： (4:35 下午) Welcome any comments. Gil will answer all questions later today. Dai Zhang对所有人说： (4:37 下午) ucs_status_ptr_t ucp_tag_send_nb    (    ucp_ep_h     ep, const void *     buffer, size_t     count, ucp_datatype_t     datatype, ucp_tag_t     tag, ucp_send_callback_t     cb  ) Here’s the old interface Qingchun Song对所有人说： (4:39 下午) we will set 1 hour Q&amp;A Tina again at tomorrow we will set 1 hour Q&amp;A time again at tomorrow Qingchun Song对所有人说： (4:40 下午) you can talk with Gil about your question not regard with the competition geofeng对所有人说： (4:45 下午) any more question? zmc对所有人说： (4:58 下午) Will there be more details about modifying the application interface to ucx, or we can start to modify it now. geofeng对所有人说： (5:00 下午) you can start to check and evaluate which part is good to modify, if you have solid plan, could start now Qingchun Song对所有人说： (5:05 下午) seems I have the issue in my mic please see the short summary in this week geofeng对所有人说： (5:06 下午) sure Qingchun Song对所有人说： (5:06 下午) in this week, we learned the network transport layer operations TCP communication RDMA communication with Verbs RDMA RDMA communication with UCX The network accelerate tools RDMA applications in computing RDMA Qingchun Song对所有人说： (5:08 下午) application in storage hope everyone can have the fruitful result by this lecture let’s start the hackathon After the discussion with Gil, we recommend to use SPDK to run the competition since the short time SPDK has already implemented RDMA based on verbs Qingchun Song对所有人说： (5:11 下午) please change the implementation from verbs to UCX according to what you learned in this week Pengzhi, please provide the reference link to all persons You will have the SPDK code download link start guideline some reference code  1.    Spdk dev env https://spdk.io/doc/vagrant.html2.    Spdk hello-world app https://software.intel.com/content/www/us/en/develop/articles/accelerating-your-nvme-drives-with-spdk.html3.    The perf utility is documented with example in link from [2]</code></pre><h1 id="Day06"><a href="#Day06" class="headerlink" title="Day06"></a>Day06</h1><p>聊天记录</p><pre><code>geofeng对所有人说： (9:05 上午) Answers for the questions of yesterday: geofeng对所有人说： (9:05 上午) 1.    About datatypes and buffers. In general case datatype may describe non-contig data, for example it may represent matrix (set of buffers + padding data) where useful data is split by holes which should not be processed during send/receive operations. But in simple case, when used contig datatypes, it is just solid buffer, size may be calculated as count * size(datatype). Such semantics is reflecting MPI datatypes. geofeng对所有人说： (9:05 上午) 2.    Cross-polling workers and requests. Worker progress is polling only own requests which were created using this particular worker. You have to progress all workers which were used to create request, there is no way to workers cross-polling of requests. There is no limitation for cores to progress workers: worker is representation of “thread context”, you may use one thread to post operation and another thread to progress it. If UCX is built with multithread mode and worker is created with multithreaded mode (see ucs_thread_mode_t, ucp_worker_params_t and ucp_worker_create) then UCX will serialize all operations for worker. geofeng对所有人说： (9:05 上午) 3.    NBX interface. In UCX 1.9 we added new set of API – request based interfaces named NBX (non-block extended). For params which may be omitted (for example your program is operating by single char based buffers, no complex data and no callbacks are used to notify completions) user may pass empty ucp_request_param_t parameter and UCX excludes some overhead from processing of data which may improve performance of data transfer and application. This interface is stable and we are not going to change it in nearest future. geofeng对所有人说： (9:05 上午) @Zai Zhang Dai Zhang对所有人说： (9:12 上午) Gotit! Thank you!! </code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RDMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>B站视频记录</title>
      <link href="/posts/bilibili-videos-in-hexo/"/>
      <url>/posts/bilibili-videos-in-hexo/</url>
      
        <content type="html"><![CDATA[<p>这篇文章暂时有两个目的，一是学习在hexo中插入B站视频，二是记录B站中感兴趣的视频。</p><p><strong>提示：如果视频无法播放，请使用https的方式打开</strong></p><p>看看视频就好，文字还是别看了。写的毫无逻辑可言，语言表达能力低下，想到哪写到哪:pensive:</p><h1 id="视频列表"><a href="#视频列表" class="headerlink" title="视频列表"></a>视频列表</h1><h2 id="2020B站跨年演唱会——好一朵美丽的茉莉花"><a href="#2020B站跨年演唱会——好一朵美丽的茉莉花" class="headerlink" title="2020B站跨年演唱会——好一朵美丽的茉莉花"></a>2020B站跨年演唱会——好一朵美丽的茉莉花</h2><p>2020年B站的跨年晚会可以算是一次很成功的晚会了，几乎是吊打各大卫视的晚会。小破站第一次举办跨年晚会并没有引起太多人的关注，所以第一次直播的时候并没有很多人观看。当有一部分人在网上“鼓吹”B站晚会的惊艳之时，越来越多的人都去一探究竟，最终获得了大部分人的肯定。为什么在各大卫视举办了好几年的跨年演唱会的情况下，B站的跨年演唱会却能脱引而出呢？我仅以我看过的一小部分来谈谈自己的想法。我观看的主要部分有五月天，邓紫棋和大碗宽面，当然了，还有下面的好一朵美丽的茉莉花。从这几个人和节目的选取就可以看出，B站在选材和明星的选择中不拘泥于传统，而是紧跟时代， 符合当代年轻人的审美与口味。</p><p>单就视频中选取的这个节目来说，我也是感慨良多，但是要写出来的时候却又没表达不出来…:sweat:洛天依对于B站的老用户们可能很熟悉，但是对于我这个不怎么熟悉B站不怎么喜欢二次元的人来说确实第一次认识的存在。在回看这个节目时，首先是被运用到的AR技术深深的震惊与吸引了。节目中飞来飞去的卡通人物，四季变换的场景，与孩童式的歌声相交错，让我在喧闹的城市成活中感受到了民谣的宁静与纯美。其次是洛天依的人物设计与歌喉的魅力，让我久久无法释怀。</p><p><a href="https://www.bilibili.com/bangumi/play/ep307691" target="_blank" rel="noopener">洛天依古筝首秀破次元合作方锦龙 带你穿越绝美四季 </a></p><p>若由于版权原因不能播放，请到原地址观看。</p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-RHqEhbfb" src="//player.bilibili.com/player.html?bvid=BV1TJ411h7HL&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-RHqEhbfb").style.height=document.getElementById("mmedia-RHqEhbfb").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-RHqEhbfb").style.height=document.getElementById("mmedia-RHqEhbfb").scrollWidth*0.76+"px";            };        </script>        <h2 id="G-E-M-邓紫棋-Real-Talk版《差不多姑娘》MV-全新上线！满篇“人间真实”！"><a href="#G-E-M-邓紫棋-Real-Talk版《差不多姑娘》MV-全新上线！满篇“人间真实”！" class="headerlink" title="G.E.M.邓紫棋 | Real Talk版《差不多姑娘》MV 全新上线！满篇“人间真实”！"></a>G.E.M.邓紫棋 | Real Talk版《差不多姑娘》MV 全新上线！满篇“人间真实”！</h2><p><a href="https://www.bilibili.com/video/BV1Xt411n7iJ" target="_blank" rel="noopener">G.E.M.邓紫棋 | Real Talk版《差不多姑娘》MV 全新上线！满篇“人间真实”！</a></p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-RePyGrTc" src="//player.bilibili.com/player.html?bvid=BV1Xt411n7iJ&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-RePyGrTc").style.height=document.getElementById("mmedia-RePyGrTc").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-RePyGrTc").style.height=document.getElementById("mmedia-RePyGrTc").scrollWidth*0.76+"px";            };        </script>        <p>使用iframe方式插入</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=60016166&amp;bvid=BV1Xt411n7iJ&amp;cid=104514776&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"></iframe></div><p>##【洛天依|薛之谦】江苏卫视2019跨年演唱会《达拉崩吧》</p><p><a href="https://www.bilibili.com/video/BV1Rt411B7z1" target="_blank" rel="noopener">【洛天依|薛之谦】江苏卫视2019跨年演唱会《达拉崩吧》</a></p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-bywxkCiR" src="//player.bilibili.com/player.html?bvid=BV1Rt411B7z1&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-bywxkCiR").style.height=document.getElementById("mmedia-bywxkCiR").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-bywxkCiR").style.height=document.getElementById("mmedia-bywxkCiR").scrollWidth*0.76+"px";            };        </script>        <p>使用dplayer插入</p><pre><code>{% dplayer "url:http://mpvideo.qpic.cn/0bf2waaaeaaayaakc7ocavpfbmgdakyaaaqa.f10002.mp4?dis_k=3489b5782cd9fd2785d771155e29c28c&amp;dis_t=1595721717" %}</code></pre><p>效果</p><div id="mmedia-pHZsauLI"></div><script src="https://cdn.jsdelivr.net/npm/dplayer/dist/DPlayer.min.js"></script>        <script>        var dp = new DPlayer({            container: document.getElementById('mmedia-pHZsauLI'),            autoplay: false,            theme: '#b7daff',            loop: false,            lang: navigator.language,            screenshot: false,            hotkey: true,            preload: 'auto',            logo: '',            volume: 0.7,            mutex: true,            video: { url: 'https://magic.yukino.co/down/1/7.mp4', pic: '', thumbnails: '', type: 'auto'},                                    contextmenu: [{text: 'hexo-tag-mmedia', link: 'https://github.com/MonoLogueChi/hexo-tag-mmedia'}],            highlight: [],            undefined        });        dp.on("fullscreen", function () { if (/Android|webOS|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) { screen.orientation.lock("landscape"); }});        </script>        <h2 id="【Indexql-Arcaea】Cyaegha-FTR10-PM"><a href="#【Indexql-Arcaea】Cyaegha-FTR10-PM" class="headerlink" title="【Indexql / Arcaea】Cyaegha FTR10+ PM"></a>【Indexql / Arcaea】Cyaegha FTR10+ PM</h2><p>膜拜大佬手速这么快。比我眼睛都快。。。</p><p><a href="https://www.bilibili.com/video/BV1Nf4y117Je" target="_blank" rel="noopener">【Indexql / Arcaea】Cyaegha FTR10+ PM</a></p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-iopnUiom" src="//player.bilibili.com/player.html?bvid=BV1Nf4y117Je&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-iopnUiom").style.height=document.getElementById("mmedia-iopnUiom").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-iopnUiom").style.height=document.getElementById("mmedia-iopnUiom").scrollWidth*0.76+"px";            };        </script>        <h2 id="【键盘弹唱】周杰伦经典情歌《枫》"><a href="#【键盘弹唱】周杰伦经典情歌《枫》" class="headerlink" title="【键盘弹唱】周杰伦经典情歌《枫》"></a>【键盘弹唱】周杰伦经典情歌《枫》</h2><p>同学弹唱的枫。弹得好，唱的也好。我很羡慕。</p><p>周杰伦作为经典的永不过时歌手之一，他的强是我在最近两年才发现的（现在是2020年7月25日下午3点29分）。我很遗憾这么晚才发现这么一位才子。他在零几年发布的歌，在现在来听仍然谈不上一点过时，反而比当下的一些新歌要那啥。最近听的最多的就是枫和不能说的秘密了。</p><p>让我们欣赏一下枫吧。</p><p><a href="https://www.bilibili.com/video/BV1Ak4y1r7sa" target="_blank" rel="noopener">【键盘弹唱】周杰伦经典情歌《枫》</a></p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-HsGLbaRn" src="//player.bilibili.com/player.html?bvid=BV1Ak4y1r7sa&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-HsGLbaRn").style.height=document.getElementById("mmedia-HsGLbaRn").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-HsGLbaRn").style.height=document.getElementById("mmedia-HsGLbaRn").scrollWidth*0.76+"px";            };        </script>        <h2 id="冷静期？纠结期？换一个角度聊聊【婚前性行为-同居】"><a href="#冷静期？纠结期？换一个角度聊聊【婚前性行为-同居】" class="headerlink" title="冷静期？纠结期？换一个角度聊聊【婚前性行为/同居】"></a>冷静期？纠结期？换一个角度聊聊【婚前性行为/同居】</h2><p><a href="https://www.bilibili.com/video/BV1N54y1Q7gf" target="_blank" rel="noopener">冷静期？纠结期？换一个角度聊聊【婚前性行为/同居】</a></p>        <style>.bbplayer{width: 100%; max-width: undefined; margin: auto}</style>        <div class="bbplayer">        <iframe class="bbplayer" id="mmedia-XLzKAyNC" src="//player.bilibili.com/player.html?bvid=BV1N54y1Q7gf&amp;page=1&amp;high_quality=1&amp;danmaku=true" allowfullscreen="no" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe>        </div>        <script>            document.getElementById("mmedia-XLzKAyNC").style.height=document.getElementById("mmedia-XLzKAyNC").scrollWidth*0.76+"px";            window.onresize = function(){              document.getElementById("mmedia-XLzKAyNC").style.height=document.getElementById("mmedia-XLzKAyNC").scrollWidth*0.76+"px";            };        </script>        <h1 id="静态资源地址"><a href="#静态资源地址" class="headerlink" title="静态资源地址"></a>静态资源地址</h1><ol><li><a href="https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/94e8483d022ba06a4a131efd0fa104e3.mp4" target="_blank" rel="noopener">https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/94e8483d022ba06a4a131efd0fa104e3.mp4</a> 来自小米10pro宣传页</li><li><a href="https://cdn.cnbj1.fds.api.mi-img.com/product-images/mi10pro/mi10pro-24v1.jpg" target="_blank" rel="noopener">https://cdn.cnbj1.fds.api.mi-img.com/product-images/mi10pro/mi10pro-24v1.jpg</a></li><li><a href="https://cdn.cnbj1.fds.api.mi-img.com/product-images/mi10pro/mi10pro-22-3.jpg" target="_blank" rel="noopener">https://cdn.cnbj1.fds.api.mi-img.com/product-images/mi10pro/mi10pro-22-3.jpg</a></li><li><a href="https://onedrive.ruitest.workers.dev?file=/pdf/使用CloudFlareWorkers零成本部署OneDrive文件列表程序FODI.pdf" target="_blank" rel="noopener">搭建网盘</a></li></ol><h1 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h1><ol><li>必须使用https访问，否则会出现<code>No 'Access-Control-Allow-Origin' header is present on the requested resource</code>. <a href="https://github.com/LouisBarranqueiro/hexo-theme-tranquilpeak/issues/561" target="_blank" rel="noopener">参考来源</a>.</li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li><a href="https://www.cnblogs.com/wkfvawl/p/12268980.html" target="_blank" rel="noopener">关于博客园内嵌入bilibili视频</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>繁琐的小知识点记录</title>
      <link href="/posts/little-knowledge-points-record/"/>
      <url>/posts/little-knowledge-points-record/</url>
      
        <content type="html"><![CDATA[<ol><li><p>更新jsDelivr缓存内容</p><p>以下内容转载于<a href="https://mazhuang.org/2020/05/01/cdn-for-github-pages/" target="_blank" rel="noopener">码志</a></p><blockquote><p>可以访问 <code>https://purge.jsdelivr.net/gh/mzlogin/mzlogin.github.io@1.2.0/assets/js/main.js</code> 来清除指定文件的缓存；（将引用的 CDN 链接里的 <code>cdn</code> 改成 <code>purge</code> 就是了）</p></blockquote></li><li><p>查看公网ip</p><pre class=" language-bash"><code class="language-bash">curl ip.sb   <span class="token comment" spellcheck="true"># 这个速度很快</span>curl ipv6.ip.sb <span class="token comment" spellcheck="true"># 获取ipv6</span>curl ifconfig.mecurl icanhazip.com</code></pre><p>感谢这位<a href="https://github.com/zhongyang219/TrafficMonitor/issues/394" target="_blank" rel="noopener">朋友</a>的提供，这也是一种途径。</p><p><a href="https://v4.yinghualuo.cn/bejson" target="_blank" rel="noopener">https://v4.yinghualuo.cn/bejson</a><br><a href="https://v6.yinghualuo.cn/bejson" target="_blank" rel="noopener">https://v6.yinghualuo.cn/bejson</a></p></li><li><p>iterm2中建立免输入密钥文件的配置文件</p><ol><li><p>创建登录脚本，保存到Documents/login.sh</p><pre class=" language-shell"><code class="language-shell">#!/usr/bin/expectset keyfilepath Downloads/id_rsaset keyfilepassword kskhJla23kJLset user rootset ip 192.168.101.1spawn ssh -i $keyfilepath $user@$ipexpect "Enter passphrase for key '$keyfilepath':"send "$keyfilepassword\r"interact}</code></pre></li><li><p>设置iterm2中的profile</p></li></ol></li><li><p>修改ubuntu用户的shell</p><p><a href="https://blog.csdn.net/iteye_4185/article/details/82564503" target="_blank" rel="noopener">https://blog.csdn.net/iteye_4185/article/details/82564503</a></p></li><li><p>npm临时使用源</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> --registry https://registry.npmjs.org/ <span class="token function">install</span> hexo-tag-mmedia --save</code></pre></li><li><p>mac录屏文件处理。<a href="https://zhuanlan.zhihu.com/p/86966045" target="_blank" rel="noopener">参考这里</a></p><p>step1 : 转换成 mp4 格式</p><pre class=" language-bash"><code class="language-bash">ffmpeg -i source.mov -vcodec copy -acodec copy temp.mp4</code></pre><p>step2 : 降低帧率</p><pre class=" language-bash"><code class="language-bash">ffmpeg -i temp.mp4 -r 20 des.mp4</code></pre><p>合并视频: ffmpeg -f concat -i file.txt -c copy output.mov</p><p>其中 file.txt 为</p><pre><code>file '1.mov'file '2.mov'</code></pre></li><li><p>hexo部署到服务器</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cd</span> ~<span class="token function">git</span> init --bare blog.git<span class="token function">vi</span> ~/blog.git/hooks/post-receive <span class="token comment" spellcheck="true"># 输入下一行的内容</span><span class="token function">git</span> --work-tree<span class="token operator">=</span>/home/www/website --git-dir<span class="token operator">=</span>/home/git/blog.git checkout -f</code></pre></li></ol><ol start="8"><li><p>git远程与本地的操作</p><ol><li><p>git重新设置远程仓库地址</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">rm</span> origin<span class="token function">git</span> remote add origin 你的新远程仓库地址</code></pre></li><li><p>git删除远程分支</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> push origin --delete Chapater6  </code></pre></li><li><p>git 建立本地分支与远程分支的关联</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch –set-upstream 本地新建分支名 origin/远程分支名</code></pre></li><li><p>git重命名分支</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> branch -m old new</code></pre></li></ol></li></ol><ol start="9"><li><p>git放弃本地修改</p><ul><li><p>未使用git add缓存代码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> checkout -- filepathname <span class="token comment" spellcheck="true"># 放弃指定文件的缓存</span><span class="token function">git</span> checkout <span class="token keyword">.</span>               <span class="token comment" spellcheck="true"># 放弃所有的文件修改</span></code></pre></li><li><p>已经使用git add缓存代码</p><pre class=" language-bash"><code class="language-bash"> <span class="token function">git</span> reset HEAD filepathname <span class="token comment" spellcheck="true">#放弃指定文件的缓存</span> <span class="token function">git</span> reset HEAD <span class="token keyword">.</span>            <span class="token comment" spellcheck="true"># 放弃所有的文件修改</span></code></pre></li><li><p>已经用 git commit提交代码</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> reset --hard HEAD^      <span class="token comment" spellcheck="true"># 回到上一次commit的状态</span></code></pre></li></ul></li><li><p>centos查看cpu核数</p><p>1、查看 CPU 物理个数<br>　　grep ‘physical id’ /proc/cpuinfo | sort -u | wc -l</p><p>2、查看 CPU 核心数量<br>　　grep ‘core id’ /proc/cpuinfo | sort -u | wc -l</p><p>3、查看 CPU 线程数<br>　　grep ‘processor’ /proc/cpuinfo | sort -u | wc -l</p><p>4、查看 CPU  型号<br>　　dmidecode -s processor-version</p><p>5、查看 CPU 的详细信息：<br>　　cat /proc/cpuinfo</p></li><li><p>grep查找当前文件夹下包含指定字符串的文件</p><p><a href="https://blog.csdn.net/BabyFish13/article/details/79709028" target="_blank" rel="noopener">https://blog.csdn.net/BabyFish13/article/details/79709028</a></p><pre class=" language-bash"><code class="language-bash">--递归查找目录下含有该字符串的所有文件<span class="token function">grep</span> -rn <span class="token string">"data_chushou_pay_info"</span>  /home/hadoop/nisj/automationDemand/--查找当前目录下后缀名过滤的文件<span class="token function">grep</span> -Rn <span class="token string">"data_chushou_pay_info"</span> *.py--当前目录及设定子目录下的符合条件的文件<span class="token function">grep</span> -Rn <span class="token string">"data_chushou_pay_info"</span> /home/hadoop/nisj/automationDemand/ *.py--结合find命令过滤目录及文件名后缀<span class="token function">find</span> /home/hadoop/nisj/automationDemand/ -type f -name <span class="token string">'*.py'</span><span class="token operator">|</span><span class="token function">xargs</span> <span class="token function">grep</span> -n <span class="token string">'data_chushou_pay_info'</span></code></pre><p><strong><em>\</em>Grep选项：**</strong><br>* : 表示当前目录所有文件，也可以是某个文件名<br>-r 是递归查找<br>-n 是显示行号<br>-R 查找所有文件包含子目录<br>-i 忽略大小写</p><p>*<em>有意思的命令行参数：<br>*</em>grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写<br>grep -l pattern files ：只列出匹配的文件名,不列出路径<br>grep -L pattern files ：列出不匹配的文件名<br>grep -w pattern files ：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’）<br>grep -C number pattern files ：匹配的上下文分别显示[number]行<br>grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行<br>grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行</p><p>*<em>有些用于搜索的特殊符号：<br>*</em>&lt; 和 &gt; 分别标注单词的开始与结尾。<br>例如：<br>grep man * 会匹配 ‘Batman’、‘manic’、‘man’等<br>grep ‘&lt;man’ * 匹配‘manic’和‘man’，但不是‘Batman’<br>grep ‘&lt;man&gt;‘ 只匹配‘man’，而不是‘Batman’或‘manic’等其他的字符串。<br>‘^’：指匹配的字符串在行首<br>‘$’：指匹配的字符串在行尾</p></li><li><p>linux文件清理</p><ol><li><p>清除<code>linux-aws-headers-*</code>文件。</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> apt autoremove<span class="token function">sudo</span> apt autoclean</code></pre></li><li><p>清除日志文件</p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> journalctl --vacuum-time<span class="token operator">=</span>2d <span class="token comment" spellcheck="true"># 仅保留最近两天的系统日志，多余的都自动删掉</span><span class="token function">sudo</span> journalctl --vacuum-size<span class="token operator">=</span>50M <span class="token comment" spellcheck="true"># 仅保留50M大小的系统日志，多余的都自动删掉</span></code></pre></li></ol></li><li><p>centos非root用户安装软件的一种方法</p><ol><li><p>使用yum搜索包</p><pre class=" language-bash"><code class="language-bash">yum list  <span class="token string">'graphviz*'</span></code></pre></li><li><p>下载rpm包</p><pre class=" language-bash"><code class="language-bash">yumdownloader graphviz.x86_64 </code></pre></li><li><p>解压rpm包</p><pre class=" language-bash"><code class="language-bash">rpm2cpio graphviz-2.30.1-19.el7.x86_64.rpm <span class="token operator">|</span>cpio -idvm</code></pre></li><li><p>将可执行文件路径添加到环境变量</p><pre class=" language-bash"><code class="language-bash">vim  ~/.bashrc<span class="token function">export</span> PATH<span class="token operator">=</span><span class="token variable">$PATH</span><span class="token keyword">:</span><span class="token variable">$HOME</span>/usr/bin/</code></pre></li></ol></li><li><p>windows中U盘或者移动硬盘关不掉时，怎么知道是被哪个程序占用了呢？</p><ol><li>按下win键，直接搜索 事件查看器（或者eventvwr)。然后弹出u盘，再次出现错误</li></ol><p><img src="https://pic1.zhimg.com/80/v2-7bb79e4baba7a12c3a7b1aff1336f1bf_720w.jpg?source=1940ef5c" alt="img"></p><ol start="2"><li><p>在事件查看器里面对应的时间里找事件</p><p><img src="https://pic1.zhimg.com/80/v2-131a735a1594616aeeedfde58c0ac050_720w.jpg?source=1940ef5c" alt="img"></p></li><li><p>任务管理器结束该进程</p><p><img src="https://pic4.zhimg.com/80/v2-de817e37c68469cd39b5023f9d073d81_720w.jpg?source=1940ef5c" alt="img"></p></li></ol></li><li><p>生成网卡的UUID</p><p><a href="https://blog.csdn.net/quintind/article/details/79437838" target="_blank" rel="noopener">https://blog.csdn.net/quintind/article/details/79437838</a></p></li><li><p>win32 disk imager恢复U盘容量</p><p><a href="https://blog.csdn.net/u012400584/article/details/55506527" target="_blank" rel="noopener">https://blog.csdn.net/u012400584/article/details/55506527</a></p></li><li><p>centos开放端口</p><p>查看防火墙某个端口是否开放</p><p>firewall-cmd –query-port=3306/cp</p><p>开放防火墙端口3306</p><p>firewall-cmd –zone=public -add-port=3306/tcp –permanent</p><p>查看/开启/关闭防火墙</p><p>systemctl status/start/stop firewalld</p><p>开放一段端口</p><p>firewall-cmd –zone=public –add-port=4000-4500/tcp –permanent</p><p>查看开放的端口列表</p><p>firewall-cmd –zone=public –list-ports</p></li><li><p>安装php</p><p><a href="https://www.iemblog.com/?p=2399&amp;lang=zh" target="_blank" rel="noopener">https://www.iemblog.com/?p=2399&amp;lang=zh</a></p></li><li><p>typora标题加上序号</p><p><a href="https://blog.csdn.net/jiangxiulilinux/article/details/100666051" target="_blank" rel="noopener">https://blog.csdn.net/jiangxiulilinux/article/details/100666051</a></p></li><li><p>其他</p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未找到相关的Issues进行评论 请联系XXX初始化创建</title>
      <link href="/posts/Related-Issues-were-not-found-to-comment/"/>
      <url>/posts/Related-Issues-were-not-found-to-comment/</url>
      
        <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>今天晚上在配置hexo博客的评论时，使用gittalk的过程中遇到了点小麻烦，正如题中说道的那样。</p><p><img src="https://i.loli.net/2020/07/24/HkOUmpTFYLGAb67.png" alt="gitalk无法使用"></p><p>倒腾了我接近一个小时终于弄好的，还是马虎的原因导致的。</p><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><p>我使用的是<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">Matery</a>主题，gitalk是在这个主题的_config.yml中配置的。</p><p><img src="https://i.loli.net/2020/07/24/7rXBl2KS46hsFNk.png" alt="配置文件中gitalk的配置信息"></p><p>问题就出在这个admin的配置上。admin字段就是用来初始化评论的github用户名，之前我这个填错了导致一直不能初始化。更改为你的github用户名就可以了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软路由做旁路由时电脑无法上网</title>
      <link href="/posts/computer-cannot-access-Internet-when-the-soft-route-is-used-as-a-bypass/"/>
      <url>/posts/computer-cannot-access-Internet-when-the-soft-route-is-used-as-a-bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本科用了四年的华硕笔记本，淘汰下来放在那里吃灰。最近不想学习，所以折腾起了软路由玩。按照网上的教程装好了openwrt，在设置电脑时却无论如何都无法上网，断断续续尝试了一个星期后终于解决了。</p><h1 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h1><p>基本设置大家应该都知道，软路由的ip设置为主路由ip段中的某个合法ip，网关为主路由的ip地址，dns啥的可以是主路由地址也可以是114.114.114.114啥的。这个都可以。dhcp关掉，使用主路由的dhcp。</p><p>电脑端设置为静态ip，ip地址为主路由ip段中的某个合法ip，子网掩码为225.225.225.0，网关为软路由的ip地址。但是设置为这些后还是无法上网，我很郁闷。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>（暂时没有贴图，等我有图了我就来贴上）</p><ol><li><p>在接口中的高级设置中取消桥接。</p></li><li><p>防火墙的自定义规则中添加如下规则，并让他生效。</p><pre class=" language-shell"><code class="language-shell">iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE</code></pre></li></ol><p>进行这些设置后应该就可以了。如果还不行那我也不知道了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>疫情期间在家的感慨</title>
      <link href="/posts/20f9887f/"/>
      <url>/posts/20f9887f/</url>
      
        <content type="html"><![CDATA[<h1 id="2020年7月5日"><a href="#2020年7月5日" class="headerlink" title="2020年7月5日"></a>2020年7月5日</h1><p>今天是两门课作业的最后一个晚上。本来是完全有时间来写这两门作业的，可是刚开始的时候仍然是不着急，一拖再拖，拖到只剩最后一个周末。即使到了最后的晚上仍然是懈怠。作业完成的质量真的是呵呵了。我不知道我为什么会成为现在这个样子。看着室友完成的作业再看看自己的。我很难过，想发奋努力。不知道明天又会是怎样。别人的态度比我好，也找到了实习，确实比我优秀。我整天在家里这么干我真的能行吗？唉，无奈，却又仍然不努力，我该怎么办。有点慌了，却又无动于衷。</p><h1 id="2020年7月17日"><a href="#2020年7月17日" class="headerlink" title="2020年7月17日"></a>2020年7月17日</h1><p>今天和昨天，又是日子混的好快的两天。每天什么都没做，时间就过去了。 </p><h1 id="2020年7月24日"><a href="#2020年7月24日" class="headerlink" title="2020年7月24日"></a>2020年7月24日</h1><p>这一个星期一晃又过去了。心惊胆颤，却又完全不想学习。我也不知道我该怎么办了，别人都能学进去，我这样搞该怎么办哦。很懒，什么都不想做。</p><h1 id="2020年7月26日"><a href="#2020年7月26日" class="headerlink" title="2020年7月26日"></a>2020年7月26日</h1><p>摸鱼一星期没学习了。下星期摸鱼的时候记得倒腾下Docsify。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 不学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gdb的学习与错误解决</title>
      <link href="/posts/5f54a3c8/"/>
      <url>/posts/5f54a3c8/</url>
      
        <content type="html"><![CDATA[<h1 id="错误解决"><a href="#错误解决" class="headerlink" title="错误解决"></a>错误解决</h1><p>在写某个程序时，出现错误，想要使用gdb进行调试，但是在使用<code>b</code>命令设置断点后出现如下错误，并且运行后不能在断点处暂停。</p><pre class=" language-shell"><code class="language-shell">No symbol table is loaded.  Use the "file" command.Make breakpoint pending on future shared library load? (y or [n])</code></pre><p>经过搜索资料发现是在编译的时候没有加上<code>-g</code>选项，导致无法进行断点调试，因此在<code>Makefile</code>文件中的<code>CPPFLAGS</code>（如果是C语言就是<code>CFLAGS</code>)中加上<code>-g</code>    选项后，就能够正常进行断点调试了。</p><h1 id="gdb的简单使用方法"><a href="#gdb的简单使用方法" class="headerlink" title="gdb的简单使用方法"></a>gdb的简单使用方法</h1><ol><li>设置断点<ul><li>根据函数名设置断点：<code>b func_name</code></li><li>根据代码行位置设置断点: <code>b src/mycode.cc:81</code> gdb运行到该文件的地81行处中断。</li><li>根据运行时的地址进行设置断点: <code>b *0x5859c0</code> </li></ul></li><li>跳入或跳出指令<ul><li>执行到某个函数时<strong>不进入</strong>函数体内: <code>n</code></li><li>执行到某个函数时<strong>进入</strong>函数体内: <code>s</code></li><li>跳出当前函数（执行完当前函数返回到调用它的函数）: <code>f</code></li></ul></li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ol><li>No symbol table is loaded. Use the “file” command.解决方法: <a href="https://blog.csdn.net/pinghegood/article/details/8512747" target="_blank" rel="noopener">https://blog.csdn.net/pinghegood/article/details/8512747</a></li><li>gdb几种设置断点的方式: <a href="https://blog.csdn.net/wojiuguowei/article/details/82386567" target="_blank" rel="noopener">https://blog.csdn.net/wojiuguowei/article/details/82386567</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> linux开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摸鱼记录-我的第一篇博客文章</title>
      <link href="/posts/b24dd347/"/>
      <url>/posts/b24dd347/</url>
      
        <content type="html"><![CDATA[<h1 id="2020年7月1日"><a href="#2020年7月1日" class="headerlink" title="2020年7月1日"></a>2020年7月1日</h1><p>事情很多，但是我仍然很摸鱼。今天看到了许多优秀的博客，我也想弄一个自己的博客。然后就开始尝试了</p><p>搞了一晚上，终于弄了个雏形出来了，多谢大佬的<a href="https://zhuanlan.zhihu.com/p/35668237" target="_blank" rel="noopener">指点</a>，让我的搭建过程顺利了许多。这位学长的<a href="https://godweiyang.com/" target="_blank" rel="noopener">博客</a>写的真的不错，是我学习的榜样。可是我太懒了，只想摸鱼，唉。</p><h1 id="2020年7月2日"><a href="#2020年7月2日" class="headerlink" title="2020年7月2日"></a>2020年7月2日</h1><p>早上一大早起来就开始着手实行博客访问速度的优化方式。使用国外CDN的速度还是不理想，使用国内CDN需要备案太麻烦。于是只是想静态的js和css资源使用了cdn，速度似乎提高了一点。接下来需要做的是将图片换成其他的图床，避免从国外服务器拉取。</p><p>测试博文中图床的使用：</p><p>sm.ms</p><p><img src="https://i.loli.net/2020/07/02/xgAZMPk6yXstFnT.png" alt="sm.ms图床的照片"></p><p>路过图床</p><p><img src="https://s1.ax1x.com/2020/05/05/YiphlD.png" alt="路过图床的照片"></p><h2 id="待完成的任务"><a href="#待完成的任务" class="headerlink" title="待完成的任务"></a>待完成的任务</h2><ol><li><p>将图片从图床上获取。</p><p>目前域名已经在备案过程中，备案成功过使用cdn加速。文章中的图片使用图床。</p></li><li><p>消除文章正文后面的冗余信息。</p><p>已经消除</p></li></ol><h1 id="摸鱼计划"><a href="#摸鱼计划" class="headerlink" title="摸鱼计划"></a>摸鱼计划</h1><h2 id="2020年7月26日"><a href="#2020年7月26日" class="headerlink" title="2020年7月26日"></a>2020年7月26日</h2><ol><li>使用Docsify搭建一个文档网站。</li><li><del>使用oneindex和onedrive倒腾一下云盘和在线视频播放。</del> 7月底已经完成。<ol><li>参考视频:<a href="https://www.bilibili.com/video/av27789262/" target="_blank" rel="noopener">https://www.bilibili.com/video/av27789262/</a></li></ol></li></ol><h2 id="2020年7月27日"><a href="#2020年7月27日" class="headerlink" title="2020年7月27日"></a>2020年7月27日</h2><ol><li>python下载m3u8视频<ol><li>参考链接：<a href="https://blog.csdn.net/s_kangkang_A/article/details/103071822" target="_blank" rel="noopener">https://blog.csdn.net/s_kangkang_A/article/details/103071822</a></li><li><a href="https://blog.csdn.net/makefool/article/details/104807029" target="_blank" rel="noopener">https://blog.csdn.net/makefool/article/details/104807029</a></li><li><a href="https://zhuanlan.zhihu.com/p/70290764" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/70290764</a></li></ol></li></ol><h2 id="2020年7月28日"><a href="#2020年7月28日" class="headerlink" title="2020年7月28日"></a>2020年7月28日</h2><ol><li>今天备案通过了，有时间用七牛云和又拍云加速博客。现在有备案域名了，看看还能做啥。</li><li><del>开通域名邮箱</del> 8月2日开通完成，邮箱地址为<a href="http://mail.zhangruiahu.cn" target="_blank" rel="noopener">http://mail.zhangruiahu.cn</a>, 邮箱账号为<a href="mailto:zhangrui@zhangruiahu.cn">zhangrui@zhangruiahu.cn</a>.</li></ol><h2 id="2020年7月31日"><a href="#2020年7月31日" class="headerlink" title="2020年7月31日"></a>2020年7月31日</h2><ol><li>实现OFDI的防盗链功能，通过判断requestheader中的refer判断。</li></ol><h1 id="参考站点"><a href="#参考站点" class="headerlink" title="参考站点"></a>参考站点</h1><ol><li>godweiyang的博客<a href="https://godweiyang.com/" target="_blank" rel="noopener">https://godweiyang.com/</a></li><li>hexo-theme-matery主题<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">https://github.com/blinkfox/hexo-theme-matery</a></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 摸鱼记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 不学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156/"/>
      <url>/posts/4a17b156/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
